name: Deploy Application

on:
  repository_dispatch:
    types: [deploy-application]

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  HETZNER_CLOUD_KEY: ${{ secrets.HETZNER_CLOUD_KEY }}
  PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
  CLOUDFLARE_TUNNEL_SECRET: ${{ secrets.CLOUDFLARE_TUNNEL_SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm ci

      - name: Process configuration files
        run: |
          for file in ./tooling/data/dozzle/users.yaml ./tooling/data/shepherd/shepherd-config.yaml docker-compose.*.yaml; do
            if [ -f "$file" ] && grep -q '\${.*}' "$file"; then
              sed -i \
                -e 's|\${DOZZLE_PASSWORD}|${{ secrets.DOZZLE_PASSWORD }}|g' \
                -e 's|\${DISCORD_WEBHOOK}|${{ secrets.DISCORD_WEBHOOK }}|g' \
                -e 's|\${CONTAINER_REGISTRY_URL}|${{ secrets.CONTAINER_REGISTRY_URL }}|g' \
                -e 's|\${ORIGIN_CODIGO}|${{ secrets.ORIGIN_CODIGO }}|g' \
                -e 's|\${ORIGIN_MAUMERCADO}|${{ secrets.ORIGIN_MAUMERCADO }}|g' \
                "$file"
            fi
          done

      - name: Setup SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/id_rsa.pub

          # Debug: Check SSH key files
          ls -l ~/.ssh
          wc -l ~/.ssh/id_rsa ~/.ssh/id_rsa.pub

      - name: Setup Pulumi
        uses: pulumi/actions@v5

      - name: Configure Pulumi
        run: |
          pulumi stack select codigo/${{ github.event.client_payload.name }}/prod
          pulumi config set aws:region ${{ vars.AWS_REGION }}
          pulumi config set --secret hcloud:token ${{ secrets.HETZNER_CLOUD_KEY }}
          pulumi config set appName ${{ github.event.client_payload.name }}

          # Set configs from secrets
          pulumi config set --secret awsAccessKeyId "${{ secrets.AWS_ACCESS_KEY_ID }}"
          pulumi config set --secret awsSecretAccessKey "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          pulumi config set --secret mauAppTypeSenseKey "${{ secrets.MAU_APP_TYPESENSE_API_KEY }}"
          pulumi config set --secret mauAppPBEncryptionKey "${{ secrets.MAU_APP_PB_ENCRYPTION_KEY }}"
          pulumi config set --secret cloudflareApiToken "${{ secrets.CLOUDFLARE_TUNNEL_SECRET }}"

          # Set SSH keys
          pulumi config set --secret sshPublicKey "$(cat ~/.ssh/id_rsa.pub)"
          pulumi config set --secret sshPrivateKey "$(cat ~/.ssh/id_rsa)"

          # Set configs from files
          for file in docker-compose.mau-app.yaml docker-compose.tooling.yaml ./tooling/data/dozzle/users.yaml ./tooling/data/shepherd/shepherd-config.yaml ./tooling/data/caddy/Caddyfile; do
            pulumi config set --secret $(basename $file .yaml | tr '.-' '_') "$(cat $file)"
          done

          # Set configs from bin scripts
          for script in backupData uploadToS3 restoreBackup; do
            pulumi config set --secret ${script}Script "$(cat ./bin/${script}.js)"
          done

          # Set backup directory
          pulumi config set backupDir ${{ vars.BACKUP_DIR }}

          # Set Cloudflare tunnel configurations
          pulumi config set --secret cloudflareAccountId "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          pulumi config set --secret cloudflareCodigoZoneId "${{ secrets.CLOUDFLARE_CODIGO_ZONE_ID }}"
          pulumi config set --secret cloudflareMaumercadoZoneId "${{ secrets.CLOUDFLARE_MAUMERCADO_ZONE_ID }}"
          pulumi config set --secret cloudflare:apiToken "${{ secrets.CLOUDFLARE_API_TOKEN }}"

          # Debug: Check Pulumi config (be careful not to expose secrets)
          pulumi config get appName
          pulumi config get aws:region

        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Deploy infrastructure
        uses: pulumi/actions@v5
        with:
          command: up
          stack-name: codigo/${{ github.event.client_payload.name }}/prod
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
