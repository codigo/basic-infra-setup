services:
  caddy:
    image: caddy:2
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/codigo/tooling/data/caddy/data:/data
      - /home/codigo/tooling/data/caddy/config:/config
      - /home/codigo/tooling/data/caddy/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - caddy_net
    healthcheck:
      test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  codigo-updater:
    image: "{{ CONTAINER_REGISTRY_URL }}/codigo/container-updater:latest"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      JWT_SECRET: "{{ JWT_SECRET }}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - caddy_net

  dozzle:
    image: amir20/dozzle:latest
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    environment:
      - DOZZLE_LEVEL=debug
      - DOZZLE_MODE=swarm
      - DOZZLE_AUTH_PROVIDER=simple
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - source: users
        target: /data/users.yml
    networks:
      - caddy_net

  cloudflared-maumercado:
    image: cloudflare/cloudflared:latest
    command:
      - tunnel
      - run
      - --token
      - "{{ MAUMERCADO_TUNNEL_TOKEN }}"
    networks:
      - caddy_net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  cloudflared-codigo:
    image: cloudflare/cloudflared:latest
    command:
      - tunnel
      - run
      - --token
      - "{{ CODIGO_TUNNEL_TOKEN }}"

    networks:
      - caddy_net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  caddy_net:
    external: true

configs:
  caddyfile:
    file: /home/codigo/tooling/data/caddy/Caddyfile

secrets:
  users:
    file: /home/codigo/tooling/data/dozzle/users.yaml
