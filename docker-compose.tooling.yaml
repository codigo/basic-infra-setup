services:
  caddy:
    image: caddy:2
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "80:80"
    volumes:
      - ./tooling/data/caddy/data:/data
      - ./tooling/data/caddy/config:/config
    configs:
      - source: caddyfile
        target: /etc/caddy/Caddyfile
    networks:
      - caddy_net

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=/run/secrets/cloudflare_tunnel_token
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - caddy_net
    secrets:
      - cloudflare_tunnel_token

  dozzle:
    image: amir20/dozzle:latest
    deploy:
      mode: global
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 8888:8080
    environment:
      - DOZZLE_LEVEL=debug
      - DOZZLE_MODE=swarm
      - DOZZLE_AUTH_PROVIDER=simple
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    secrets:
      - source: users
        target: /data/users.yml
    networks:
      - dozzle
      - caddy_net

  shepherd:
    image: containrrr/shepherd:latest
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SHEPHERD_DOCKER_API_VERSION=1.40
    configs:
      - source: shepherd_config
        target: /config/config.yaml
    networks:
      - caddy_net

networks:
  caddy_net:
    external: true
  dozzle:
    driver: overlay

configs:
  caddyfile:
    file: ./tooling/data/caddy/Caddyfile
  shepherd_config:
    file: ./tooling/data/shepherd/shepherd-config.yaml

secrets:
  users:
    file: ./tooling/data/dozzle/users.yaml
  cloudflare_tunnel_token:
    name: cloudflare_tunnel_token
    external: true
